<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:aop="http://www.springframework.org/schema/aop"
    xmlns:tx="http://www.springframework.org/schema/tx"
    xsi:schemaLocation="http://www.springframework.org/schema/beans
           http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
           http://www.springframework.org/schema/context
           http://www.springframework.org/schema/context/spring-context-2.5.xsd
           http://www.springframework.org/schema/aop
           http://www.springframework.org/schema/aop/spring-aop-2.5.xsd
           http://www.springframework.org/schema/tx 
           http://www.springframework.org/schema/tx/spring-tx-2.5.xsd">

    <bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="fileEncoding" value="utf-8" />
        <property name="ignoreUnresolvablePlaceholders" value="true" />
        <property name="location" value="classpath:config.properties"/>
    </bean>

    <import resource="db_config.xml"/>
    
    <!--<context:component-scan base-package="net.cfrost.web" />-->

    <bean id="log" class="net.cfrost.web.core.util.Log">
        <property name="logService" ref="logService"/>
    </bean>

    <bean id="logService" class="net.cfrost.web.core.log.service.impl.LogService">
        <property name="accessLogDao" ref="accessLogDao"/>
    </bean>
    
    <bean id="accessLogDao" class="net.cfrost.web.core.log.dao.impl.AccessLogDao">
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>
    
    
    <bean id="userDao" class="net.cfrost.web.core.security.authentication.dao.impl.UserDao">
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>
    <bean id="roleDao" class="net.cfrost.web.core.security.authentication.dao.impl.RoleDao">
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>
    <bean id="roleAuthDao" class="net.cfrost.web.core.security.authentication.dao.impl.RoleAuthDao">
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>
    
    <bean id="userService" name="userDetailsService" class="net.cfrost.web.core.security.authentication.service.impl.UserService">
        <property name="userDao" ref="userDao"/>
        <property name="passwordEncoder" ref="passwordEncoder"/>
    </bean>
    
    <bean id="authorityService" class="net.cfrost.web.core.security.authentication.service.impl.AuthorityService">
        <property name="roleAuthDao" ref="roleAuthDao"/>
    </bean>   
    
    <bean id="passwordEncoder" class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder" />
    
    <!-- <bean id="usernamePasswordAuthenticationProvider" class="net.cfrost.web.core.security.authentication.provider.UsernamePasswordAuthenticationProvider">
        <property name="userDetailsService" ref="userDetailsService"/>
        <property name="passwordEncoder" ref="passwordEncoder"/>
    </bean> 
    
    <bean id="ldapAuthenticationProvider" class="org.springframework.security.ldap.authentication.LdapAuthenticationProvider">
        <constructor-arg index="0" ref="ldapAuthenticator"/>
        <constructor-arg index="1" ref="ldapAuthoritiesPopulator"/>
    </bean>
    
    <bean id="ldapAuthenticator" class="org.springframework.security.ldap.authentication.BindAuthenticator">
        <constructor-arg ref="ldapContextSource" />
        <property name="userSearch" ref="ldapUserSearch" />
    </bean>
    
    <bean id="ldapUserSearch" class="org.springframework.security.ldap.search.FilterBasedLdapUserSearch">
        <constructor-arg index="0"
            value="${ldap.searchBase}" />
        <constructor-arg index="1"
            value="${ldap.searchFilter}" />
        <constructor-arg index="2"
            ref="ldapContextSource" />
    </bean>
    
    <bean id="ldapContextSource"
        class="org.springframework.security.ldap.DefaultSpringSecurityContextSource">
        <constructor-arg value="${ldap.url}" />
        <property name="userDn"
            value="${ldap.userDN}" />
        <property name="password" value="${ldap.password}" />
    </bean>
    
    <bean id="ldapAuthoritiesPopulator" 
        class="org.springframework.security.ldap.authentication.UserDetailsServiceLdapAuthoritiesPopulator">
        <constructor-arg ref="userDetailsService"/>
    </bean> 
    
    <import resource="security.xml"/>-->
</beans>