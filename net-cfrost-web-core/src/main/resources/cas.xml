<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:sec="http://www.springframework.org/schema/security"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
           http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
           http://www.springframework.org/schema/context
           http://www.springframework.org/schema/context/spring-context-2.5.xsd
           http://www.springframework.org/schema/aop
           http://www.springframework.org/schema/aop/spring-aop-2.5.xsd
           http://www.springframework.org/schema/tx
           http://www.springframework.org/schema/tx/spring-tx-2.5.xsd
           http://www.springframework.org/schema/security
           http://www.springframework.org/schema/security/spring-security-4.0.xsd">	

    <bean id="serviceProperties"  class="org.springframework.security.cas.ServiceProperties">
        <property name="service"  value="${cas.localSystemUrl}/j_spring_security_check"/>
        <property name="sendRenew" value="false"/>
    </bean>
    
     <bean id="casEntryPoint"  class="org.springframework.security.cas.web.CasAuthenticationEntryPoint">
        <property name="loginUrl" value="${cas.loginUrl}"/>
        <property name="serviceProperties" ref="serviceProperties"/>
    </bean>

    <bean id="casAuthenticationProvider"
            class="org.springframework.security.cas.authentication.CasAuthenticationProvider">
        <property name="userDetailsService" ref="userDetailsService"/>
        <property name="serviceProperties" ref="serviceProperties" />
        <property name="ticketValidator">
            <bean class="org.jasig.cas.client.validation.Cas20ServiceTicketValidator">
                <constructor-arg index="0" value="${cas.url}" />
            </bean>
        </property>
        <property name="key" value="an_id_for_this_auth_provider_only"/>
    </bean>

    <!--bean id="casFilter"  class="org.springframework.security.cas.web.CasAuthenticationFilter">
        <property name="authenticationManager" ref="authenticationManager"/>
        <property name="filterProcessesUrl" value="/j_spring_security_check"/>
    </bean>

    <sec:authentication-manager alias="authenticationManager">
        <sec:authentication-provider ref="casAuthenticationProvider"/>
    </sec:authentication-manager>

    <sec:http auto-config="false" entry-point-ref="casEntryPoint" servlet-api-provision="true">
        <sec:intercept-url pattern="/j_spring_security_check" access="permitAll" />
        <sec:intercept-url pattern="/**" access="hasAuthority('USER')" />
        <sec:logout-success-url="/login.html">
        <sec:logout logout-url="/login.do" success-handler-ref="casLogoutSuccessHandler"/>
        <sec:custom-filter ref="requestSingleLogoutFilter" before="LOGOUT_FILTER" />
        <sec:custom-filter position="FORM_LOGIN_FILTER" ref="casFilter"  />
        <sec:custom-filter ref="singleLogoutFilter" before="CAS_FILTER" />
    </sec:http-->

    <!-- 注销客户端 -->
    <!-- <bean id="singleLogoutFilter" class="org.jasig.cas.client.session.SingleSignOutFilter" /> -->

    <!-- 注销服务器端 -->
    <!-- <bean id="requestSingleLogoutFilter"
    class="org.springframework.security.web.authentication.logout.LogoutFilter">
    <constructor-arg
    value="${cas.logoutUrl}" />
    <constructor-arg>
    <bean
    class="org.springframework.security.web.authentication.logout.SecurityContextLogoutHandler"/>
    </constructor-arg>
    <property name="filterProcessesUrl" value="/logout" />
    </bean> -->
</beans>